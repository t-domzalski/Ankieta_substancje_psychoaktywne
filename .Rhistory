istotnenumer <-
c(istotnenumer, i
)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
istotnenumer <-
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
load(file = "dane.Rda")
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
danelog
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
load(file = "dane.Rda")
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
nikotyna_alkohol <- c(13, 14)
setdiff(istotnenumer, nikotyna_alkohol)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotne <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
?odds.ratio
??odds.ratio
exp(coef(model))
exp(coef(model))
coef
1/exp(coef(model))
data.frame(exp(coef(model)))
data.frame(1/exp(coef(model)))
?data.frame
data.frame(1/exp(coef(model), 1/confint(model, level = 0.95))
data.frame(1/exp(coef(model), 1/confint(model, level = 0.95)))
data.frame((1/exp(coef(model)), (1/confint(model, level = 0.95)))
data.frame(1/exp(coef(model), (1/confint(model, level = 0.95)))
data.frame(1/exp(coef(model), (1/confint(model, level = 0.95))))
data.frame(exp(coef(model), confint(model, level = 0.95))
data.frame(exp(coef(model), confint(model, level = 0.95)))
data.frame(confint(model, level = 0.95))
t(data.frame(exp(coef(model))))
data.frame(exp(coef(model)))
data.frame(confint(model, level = 0.95))
data.frame(exp(coef(model, confint(model, level = 0.95))))
data.frame(confint(model, level = 0.95))
t(data.frame(confint(model, level = 0.95)))
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
?coef
?confint
?data.frame
options(warn=-1)
t(data.frame(1/exp(coef(model, ))))
t(data.frame(1/confint(model, level = 0.95)))
options(warn=0)
options(warn=-1)
coe <- 1/exp(coef(model)
t(data.frame(1/exp(coef(model))))
options(warn=-1)
coe <- 1/exp(coef(model))
t(data.frame(1/exp(coef(model))))
con <- 1/confint(model, level = 0.95)
t(data.frame(con))
options(warn=0)
options(warn=-1)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
options(warn=0)
options(warn=-1)
or <- data.frame(t(data.frame(exp(coef(model, )))),t(data.frame(confint(model, level = 0.95))))
kable(or)
options(warn=0)
install.packages(tinytex)
install.packages("tinytex")
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
length(dane$kierunek_medyczyny)
length(dane$kierunek_medyczyny)
View(dane)
length(dane$Kierunek_medyczyny)
length(dane)
subset(dane, )
?subset
subset(dane, subset = (dane$Kierunek_medyczny == 1))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 0)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 0)))
nrow(subset(dane, subset = (dane$`M=0/K=1` == 1)))
?fig.width
kable
?kabel
?kable
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
i <- 1
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Namawianie, nielegal$Namawianie)
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
, quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
)
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Namawianie, nielegal$Namawianie)
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
, quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Namawianie, nielegal$Namawianie)
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
, quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
modelowyframe <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(modelowyframe, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka, row.names = FALSE)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
?data.frame
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja, row.names = 1)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja, row.names = 1)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
