load("~/MEGA/PSYCHOLOGIA/Technologie Informatyczne/Projekty/Ankieta_substancje_psychoaktywne/dane.Rda")
#Skrypt tworzy data.frame o nazwie nnn który pokazuje numeracje kolumn w dane.Rda . Jest to pomocne w orientacji.
load(file = "dane.Rda")
nazwy <- colnames(dane)
numery <- c(1:(length(nazwy)))
nnn <- data.frame(nazwy, numery)
remove(nazwy)
remove(numery)
# 1. Porównanie testem U manna-whitneya czy jest statystycznie istotna różnica
# między populacją osób sięgających po substancje nielegalne w odpowiedzi na pytania
# namawianie = W jakim stopniu zgadzasz się ze stwierdzeniem: Ktoś usilnie namawiał mnie do pójścia na studia/wybrania tego kierunku.
# ciekawe = W jakim stopniu zgadzasz się ze stwierdzeniem: Studia na które uczęszczam uważam za ciekawe i interesujące.
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1)#subset siegajacych po nielegalne substancje
#######W jakim stopniu zgadzasz się ze stwierdzeniem: Ktoś usilnie namawiał mnie do pójścia na studia/wybrania tego kierunku.
wilcox.test(legal$Namawianie, nielegal$Namawianie)
#Hipoteza zerowa - nie ma istonej różnicy między grupami.
#Wilcoxon rank sum test with continuity correction
#data:  legal$Namawianie and nielegal$Namawianie
#W = 17010, p-value = 0.01582 - HIPOTEZA ZEROWA ODRZUCONA
#alternative hypothesis: true location shift is not equal to 0
t.test(legal$Namawianie, nielegal$Namawianie) #czy można? kwestia kontrowersyjna.
######W jakim stopniu zgadzasz się ze stwierdzeniem: Moje studia uważam za ciekawe i interesujące.
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
#Hipoteza zerowa - nie ma istonej różnicy między grupami.
#data:  legal$Ciekawe and nielegal$Ciekawe
#W = 23814, p-value = 0.03942 HIPOTEZA ZEROWA ODRZUCONA
#alternative hypothesis: true location shift is not equal to 0
#2.
#Tu zaczna się skrypt z testem ChiKwadrat.
#Analizuję tu zależność między zmiennymi różnymi zmiennymi binarnymi (w przypadku "Namawianie" i "ciekawe" które są w skali likerta) a zmienną "nielegal_ogol".
#Pytanie: czemu w przypadku niektórych zmiennych wyskakuje komunikat "In chisq.test(tab) : Chi-squared approximation may be incorrect"?
#Te same dane wporwadzone do statistici dają takie same wyniki, ale bez komunikatu o błędzie.
#WSZYSTKIE KOLUMNY Dane.Rda:
#[1] "lp"                          "Wiek"                        "M=0/K=1"                     "Student"                     "Kierunek"
#[6] "rok"                         "Namawianie"                  "Ciekawe"                     "Substancje"                  "Medycyna"
#[11] "Kierunek_medyczny"           "Kofeina"                     "Nikotyna"                    "alkohol"                     "napoje_energertyzujące"
#[16] "dopalacze"                   "amfetamina"                  "kokaina"                     "marihuana/haszysz"           "srod_uspok_niezap_przez_lek"
#[21] "inne"                        "inne_nielegal"               "Podstawowe_nielegal"         "nielegal_ogol"
istotnenumer <- c()
istotnenazwa <- c()
v <- c(6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_____________________________________________________________________________________________________________________________________________________-"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
print(paste("Zmienne (i ich numery kolumn) dla których w teście chisquare p < 0.05"))
print(istotnenazwa)
print(istotnenumer)
p <- NULL
i <- NULL
n <- NULL
tab <- NULL
#Logistic regression implementadan
load(file = "dane.Rda")
load(file = "PODSUMOWANIiE.R")
library(ggplot2)
library(fortunes)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
anova(model, test = "Chisq")
#statystyka Walda,
#Porównanie wieku miedzy grupami
wilcox.test(legal$Wiek, nielegal$Wiek)
#Porównanie roku studiów między grupami
wilcox.test(legal$rok, nielegal$rok)
wilcox.test(legal$Namawianie, nielegal$Namawianie)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
mean(nielegal$Namawianie)
mean(legal$Namawianie)
median(legal$Ciekawe, nielegal$Ciekawe)
median(nielegal$Ciekawe)
?table
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(Tabelka)
library("knitr", quietly = TRUE)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(Tabelka)
?kable
?data.frame
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(.,kolumny, numeracja)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
?print
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
?kable
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka), html)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka), format = latex)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka), format(html))
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(t(kolumny, numeracja))
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka, format)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
?knitr.table.format.
knitr.table.format
library("knitr", quietly = TRUE)
library(ggplot2)
library(knitr, quietly = TRUE) library(ggplot2) library(fortunes)
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
library(knitr, quietly = TRUE)
library(ggplot2)
library("fortunes"")
library(knitr, quietly = TRUE)
library(ggplot2)
library("fortunes")
install.packages("fortunes")
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
danelog <- subset(dane, select = istotnenumer)
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
danelog <- subset(dane, select = istotnenumer)
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer)
row.names(dane) <- NULL #po co ???????
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
istotnenumer
istotnenumer <-
c(istotnenumer, i
)
danelog <- subset(dane, select = c(3, 6, 7, 8, 10:16, 24))
row.names(dane) <- NULL #po co ???????
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
istotnenumer <-
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
load(file = "dane.Rda")
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
danelog
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
c(istotnenumer, i)# wrzucone zeby się resetował za kadym razem jak odpalam, nieistotna linijka
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
load(file = "dane.Rda")
istotnenumer <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(istotnenumer))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
nikotyna_alkohol <- c(13, 14)
setdiff(istotnenumer, nikotyna_alkohol)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotne <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14) #tworze wektor z numerami kolumn nikotyny i alkoholu
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
istotnenumer <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
?odds.ratio
??odds.ratio
exp(coef(model))
exp(coef(model))
coef
1/exp(coef(model))
data.frame(exp(coef(model)))
data.frame(1/exp(coef(model)))
?data.frame
data.frame(1/exp(coef(model), 1/confint(model, level = 0.95))
data.frame(1/exp(coef(model), 1/confint(model, level = 0.95)))
data.frame((1/exp(coef(model)), (1/confint(model, level = 0.95)))
data.frame(1/exp(coef(model), (1/confint(model, level = 0.95)))
data.frame(1/exp(coef(model), (1/confint(model, level = 0.95))))
data.frame(exp(coef(model), confint(model, level = 0.95))
data.frame(exp(coef(model), confint(model, level = 0.95)))
data.frame(confint(model, level = 0.95))
t(data.frame(exp(coef(model))))
data.frame(exp(coef(model)))
data.frame(confint(model, level = 0.95))
data.frame(exp(coef(model, confint(model, level = 0.95))))
data.frame(confint(model, level = 0.95))
t(data.frame(confint(model, level = 0.95)))
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
?coef
?confint
?data.frame
options(warn=-1)
t(data.frame(1/exp(coef(model, ))))
t(data.frame(1/confint(model, level = 0.95)))
options(warn=0)
options(warn=-1)
coe <- 1/exp(coef(model)
t(data.frame(1/exp(coef(model))))
options(warn=-1)
coe <- 1/exp(coef(model))
t(data.frame(1/exp(coef(model))))
con <- 1/confint(model, level = 0.95)
t(data.frame(con))
options(warn=0)
options(warn=-1)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
options(warn=0)
options(warn=-1)
or <- data.frame(t(data.frame(exp(coef(model, )))),t(data.frame(confint(model, level = 0.95))))
kable(or)
options(warn=0)
install.packages(tinytex)
install.packages("tinytex")
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
length(dane$kierunek_medyczyny)
length(dane$kierunek_medyczyny)
View(dane)
length(dane$Kierunek_medyczyny)
length(dane)
subset(dane, )
?subset
subset(dane, subset = (dane$Kierunek_medyczny == 1))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 0)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 1)))
nrow(subset(dane, subset = (dane$Kierunek_medyczny == 0)))
nrow(subset(dane, subset = (dane$`M=0/K=1` == 1)))
