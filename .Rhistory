if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
, quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
modelowyframe <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(modelowyframe, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model, ))))
t(data.frame(confint(model, level = 0.95)))
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka, row.names = FALSE)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny, numeracja)
Tabelka <- t(Tabelka)
kable(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumhy)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
?data.frame
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja, row.names = 1)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja, row.names = 1)
kable(t(Tabelka))
remove(kolumny)
remove(numeracja)
remove(Tabelka)
?include
?{r setup}
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny, numeracja)
kable(t(Tabelka))
?kable_styling
?kable
install.packages("booktabs")
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
kable(t(Tabelka))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
kable(t(Tabelka))
t(data.frame(exp(coef(model)))
t(data.frame(confint(model, level = 0.95)))
t(data.frame(exp(coef(model))))
t(data.frame(confint(model, level = 0.95)))
?kable
install.packages("kableExtra")
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
kable(t(Tabelka), format = "latex")
data.frame(kolumny[1:9], numeracja[1:9])
t(data.frame(kolumny[1:9], numeracja[1:9]))
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
t(Tabelka)
Tabelka <-data.frame(kolumny[10:15], numeracja[10:15])
t(Tabelka)
Tabelka <-data.frame(kolumny[16:20], numeracja[16:20])
t(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
col
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
row.names(Tabelka) <- c()
Tabelka <- t(Tabelka)
print(Tabelka)
kable(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
col
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
row.names(Tabelka) <- c()
Tabelka <- t(Tabelka)
print(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
col
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
library(kableExtra)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Namawianie, nielegal$Namawianie)
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
t(Tabelka)
Tabelka <-data.frame(kolumny[10:15], numeracja[10:15])
t(Tabelka)
Tabelka <-data.frame(kolumny[16:20], numeracja[16:20])
t(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
kable(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
Tabelka <- t(Tabelka)
kable(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
col
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
modelowyframe <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(modelowyframe, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model))))
t(data.frame(confint(model, level = 0.95)))
print(paste(round(((593/792)*100), 2), "(593")))
print(paste(round(((593/792)*100), 2), "593")
print(paste(round(((593/792)*100), 2), "593"))
round(((593/792)*100), 2))
round(((593/792)*100), 2)
library(knitr, quietly = TRUE)
library(ggplot2)
library(fortunes)
library(kableExtra)
load(file = "dane.Rda")
legal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 0) #subset NIEsiegajacych po nielegalne substancje
nielegal <-
subset.data.frame(dane, subset = dane$nielegal_ogol == 1) #subset siegajacych po nielegalne substancje
wilcox.test(legal$Namawianie, nielegal$Namawianie)
wilcox.test(legal$Ciekawe, nielegal$Ciekawe)
wilcox.test(legal$Wiek, nielegal$Wiek)
wilcox.test(legal$rok, nielegal$rok)
kolumny <- colnames(dane)
numeracja <- c(1:24)
Tabelka <-data.frame(kolumny[1:9], numeracja[1:9])
t(Tabelka)
Tabelka <-data.frame(kolumny[10:15], numeracja[10:15])
t(Tabelka)
Tabelka <-data.frame(kolumny[16:20], numeracja[16:20])
t(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
istotnenumer <- c()
istotnenazwa <- c()
options(warn=-1)
v <- c(2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16)
for (i in v) {
n <- as.vector(t(dane[i]))
print(paste(i, "-", names(dane[i]), " a nielegal_ogol"))
tab <- table(n, dane$nielegal_ogol)
chi <- chisq.test(tab)
print(chi)
p <- chi$p.value
if (p < 0.05) {
print(
" p < 0.5 ISTOTNOŚC!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",
quote = FALSE
)
istotnenumer <-
c(istotnenumer, i) #Tworzy wektor z numerami kolumn(zmiennych) dla których p < 0.5
istotnenazwa <-
c(istotnenazwa, names(dane[i])) #Tworzy wektor z nazwami kolumn(zmiennych) dla których p < 0.5
}
print(
"_______________________________________________________________________________"
,
quote = FALSE
) #może da się to inaczej zrobić?
}
options(warn=0)
kolumny <- istotnenazwa
numeracja <- istotnenumer
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
kable(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
Tabelka <- t(Tabelka)
kable(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
kolumny <- istotnenazwa
numeracja <- istotnenumer
col
Tabelka <-data.frame(kolumny[1:5], numeracja[1:5])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
Tabelka <-data.frame(kolumny[6:10], numeracja[6:10])
Tabelka <- t(Tabelka)
row.names(Tabelka) <- c()
print(Tabelka)
remove(kolumny)
remove(numeracja)
remove(Tabelka)
modelowyframe <- c(istotnenumer, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
nikotyna_alkohol <- c(13, 14, 16) #tworze wektor z numerami kolumn alkoholu, nikotyny i dopalaczy to
modelowyframe <- setdiff(istotnenumer, nikotyna_alkohol) #odejmuje go od numerów zmniennych które wrzucę do glm()
modelowyframe <- c(modelowyframe, 24) #dodaje do wektora numer kolumny zmiennej zależnej (nielegal_ogol), żeby potem znalazło się w danelog
danelog <- subset(dane, select = c(modelowyframe))
model <-
glm(nielegal_ogol ~ .,
family = binomial(link = 'logit'),
data = danelog)
summary(model)
t(data.frame(exp(coef(model))))
t(data.frame(confint(model, level = 0.95)))
wilcox.test(legal$`M=0/K=1`, nielegal$`M=0/K=1`)
install.packages(dplyr)
install.packages("dplyr")
?n
?count
subset(legal, legal$`M=0/K=1` == 1) %>% length()
subset(legal, legal$`M=0/K=1` == 0) %>% length()
length(subset(legal, legal$`M=0/K=1` == 1))
subset(legal, legal$`M=0/K=1` == 1)
ncol(subset(legal, legal$`M=0/K=1` == 1))
nrow(subset(legal, legal$`M=0/K=1` == 1))
subset(legal, legal$`M=0/K=1` == o)
subset(legal, legal$`M=0/K=1` == 0)
nrow(subset(legal, legal$`M=0/K=1` == 1))
subset(legal, legal$`M=0/K=1` == 0)
nrow(subset(legal, legal$`M=0/K=1` == 0))
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(, 2)
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(, 2) %>% print())
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(, 2) %>% print()
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(2)
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(1)
library(dbplyr)
(nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% round(1)
round((nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100, 2)
?sqrt
round((nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100, 2) %>% sqrt()
nrow(subset(legal, legal$`M=0/K=1` == 1)))/nrow(dane)*100 %>% sqrt()
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)*100 %>% sqrt()
7.07^2
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)*100
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% *100
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% print(*100)
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% print(100)```
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)```
rnrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round(2)
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round(2)
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round(3)
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round(1)
round
nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round()
(nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)) %>% round()
(nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)) %>% round(2)
(nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)*100) %>% round(2)
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane)) %>% round()
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round()
a
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round() % 100 *
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round() %>% 100 *
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round() %>% 100 *
a
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(dane) %>% round()
a <- nrow(subset(dane, legal$`M=0/K=1` == 1))/nrow(dane) %>% round()
print (a,"%")
print (a)
a <- nrow(subset(dane, legal$`M=0/K=1` == 1))/nrow(dane) %>% round()
print (a)
a <- nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(legal) %>% round(2)
print (a)
a <- (nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(legal)) %>% round(2)
print (a)
a <- (nrow(subset(legal, legal$`M=0/K=1` == 1))/nrow(legal)) %>% round(4)
print (a*100, "Kobiet w grupie legal")
a <- (nrow(subset(nielegal, nielegal$`M=0/K=1` == 1))/nrow(nielegal)) %>% round(4)
print (a*, "Kobiet w grupie nielegal")
print (a, "Kobiet w grupie nielegal")
a <- (nrow(subset(nielegal, nielegal$`M=0/K=1` == 1))/nrow(nielegal)) %>% round(4)
print (a, "Kobiet w grupie nielegal")
paste(a*100, "Kobiet w grupie nielegal")
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4) %>% 100 *
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4) %>% 100 *
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4) %>% 100 *
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4)
print(paste(a * 100, " % Kobiet w grupie legal"))
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(nielegal, nielegal$`M=0/K=1` == 1)) / nrow(nielegal)) %>% round(4) %>% 100 *
paste(a*100, " % Kobiet w grupie nielegal") %>% print()
a <-
(nrow(subset(nielegal, nielegal$`M=0/K=1` == 1)) / nrow(nielegal)) %>% round(4)
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4)
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(nielegal, nielegal$`M=0/K=1` == 1)) / nrow(nielegal)) %>% round(4)
paste(a*100, " % Kobiet w grupie nielegal") %>% print()
```{r echo=false}
a <-
(nrow(subset(legal, legal$`M=0/K=1` == 1)) / nrow(legal)) %>% round(4)
print(paste(a * 100, " % Kobiet w grupie legal"))
a <-
(nrow(subset(nielegal, nielegal$`M=0/K=1` == 1)) / nrow(nielegal)) %>% round(4)
paste(a*100, " % Kobiet w grupie nielegal") %>% print()
install.packages("rmaps")
count(dane$rok)
?count
library(dplyr)
count
count(dane$rok)
count
?count
n(dane$rok)
?n
summarise(n(dane$rok))
tally(dane$rok)
unique(dane$rok)
length()
?length
length(t(dane))
nrow(dane)
824-792
subset(dane, select = dane$`M=0/K=1` == 1) %>% nrow()
subset(dane, select = dane$`M=0/K=1` == 1)
subset(dane, dane$`M=0/K=1`== 1)
subset(dane, dane$`M=0/K=1` == 1) %>% nrow()
?glm
table(dane$nielegal_ogol, predict > 0.5)
cdplot(F~x, data=mydata)
cdplot(wiek~nielegal_ogol, data=dane)
cdplot(dane$wiek~dane$nielegal_ogol, data=dane)
cdplot(dane$nielegal_ogol~dane$Wiek, data=dane)
?cdplot
cdplot(dane$nielegal_ogol~dane$Wiek)
cdplot(dane$Wiek~dane$nielegal_ogol, data=dane)
as.factor()
b <- as.factor(dane$Wiek)
cdplot(b~dane$nielegal_ogol, data=dane)
cdplot(dane$nielegal_ogol~b)
c <- as.factor(dane$nielegal_ogol)
cdplot(c~b)
unique(b)
cdplot(b~c)
cdplot(c~b)
b
cdplot(c~dane$Wiek)
median(dane$Wiek)
median(dane$rok)
shapiro.test(dane$Wiek)
sd(dane$Wiek)
sd(dane$rok)
anova(MODEL)
anova(model)
model
summary(model)
